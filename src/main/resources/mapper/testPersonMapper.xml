<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.sisells.demo.dao.TestPersonSql">
    <select id="selectAllTestPerson" resultType="top.sisells.demo.pojo.TestPerson">
        select * from testperson
    </select>
    <select id="selectTestPersonByClassId" resultType="top.sisells.demo.pojo.TestPerson">
        select * from testperson where testId in
        (select testId from testinfo where classId = #{classId})
    </select>
    <select id="selectTestPersonByTestId" resultType="top.sisells.demo.pojo.TestPerson">
        select * from testperson where testId = #{testId}
    </select>
    <select id="selectTestPersonByUserNumber" resultType="top.sisells.demo.pojo.TestPerson">
        select * from testperson where userNumber = #{userNumber}
    </select>
    <select id="selectTestPersonByTime" resultType="top.sisells.demo.pojo.TestPerson">
        select personId from testperson where testDate =#{testDate} and testSegment =#{testSegment}
        and userNumber in
        <foreach collection="userNumberList" open="(" separator="," close=")" item="item" index="index">
            '${item}'
        </foreach>
    </select>
    <insert id="insertTestPerson" parameterType="top.sisells.demo.pojo.TestPerson">
        insert IGNORE into testperson (testId, testName, testDate,testSegment, testClassroom, userNumber, userName, leader)
        values (#{testId},#{testName},#{testDate},#{testSegment},#{testClassroom},#{userNumber},#{userName},#{leader})
    </insert>
    <delete id="deleteTestPerson">
        delete from testperson where personId = #{personId}
    </delete>
    <delete id="deleteTestPersonByTestId">
        delete from testperson where testId = #{testId}
    </delete>
    <update id="updateTestPersonByTestClassroom">
        update testperson set testClassroom = #{testClassroom} where testId = #{testId}
    </update>
    <update id="updateTestPersonByTestDate">
        update testperson set testDate = #{testDate},testSegmnt = #{testSegment} where testId in
        (select testId from testinfo where classId = #{classId})
    </update>
</mapper>